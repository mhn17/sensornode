apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "jacoco"

version = '1.0'
mainClassName = "de.hammerton.sensornode.SensorNode"

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    compile 'org.jetbrains.xodus:xodus-openAPI:1.0.1'
    compile 'org.jetbrains.xodus:xodus-entity-store:1.0.1'
    compile 'org.slf4j:slf4j-simple:1.7.21'

    compile 'commons-configuration:commons-configuration:1.10'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'com.sun.jersey:jersey-core:1.19'
    compile 'com.sun.jersey:jersey-server:1.19'
    compile 'com.sun.jersey:jersey-json:1.19'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.powermock:powermock-api-mockito:1.6.4"
    testCompile "org.powermock:powermock-module-junit4:1.6.4"
    testCompile "org.mockito:mockito-all:1.10.19"
}

run {
    standardInput = System.in
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Sensor-Node',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    reports.html.destination = "${projectDir}/docs/tests/results"
}

jacoco {
    toolVersion = "0.6.2.201302030002"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${projectDir}/docs/tests/codeCoverage"
    }
}

javadoc {
    destinationDir = file("${projectDir}/docs/javadoc")
}